

branches:
  # all branches
  only:
  - gh-pages
  - /.*/

# all jobs should enable the release flag for compiler optimizations
env:
  global:
  - WHITENOISE_RELEASE=True
  - PROTO_VERSION=3.11.4
  # Note: Without the IS_CI_BUILD set to True, the python tests will stall
  - IS_CI_BUILD=True
  - TWINE_USERNAME=__token__

notifications:
  email: false

jobs:
  include:
  # -------------------------------------------------------
  # All branches: Build & Run python tests
  # On the master branch:
  # - Update python docs on Github Pages
  # - XBuild pypi OS X wheel
  # -------------------------------------------------------
  - name: Build/Test Python package
    if: branch = skipit
    os: osx
    osx_image: xcode11 # python3.7 comes installed with xcode11 image
    language: rust
    rust: stable
    install:
    - python3 -V; pip3 -V   # for debugging
    - pip3 install -U setuptools
    - pip3 install -r requirements/ci-osx_build.txt
    script:
    # Build Rust libraries + python binaries + OS X wheel
    - bash scripts/ci-osx_build_wheel.sh;
    # Run python tests (build stops if these fail)
    - python3 -m pytest -x -v;
    # Clean up the wheel
    - bash scripts/ci-osx_link_wheel.sh;
    # Build the python docs
    - bash scripts/build_docs.sh;
    deploy:
      # -------------------------------------------------------
      # Deploy docs to github pages
      # -------------------------------------------------------
      - provider: pages
        skip_cleanup: true
        local_dir: docs
        github_token: $GITHUB_TOKEN
        keep_history: true
        target_branch: gh-pages
        on:
          branch: 1-cleanup
          #branch: test-branch
      # -------------------------------------------------------
      # Deploy to pypi; credentials are in env variables
      #     - TWINE_USERNAME, TWINE_PASSWORD (using token)
      # -------------------------------------------------------
      #- provider: script
      #  skip_cleanup: true
      #  script:
      #    python3 -m pip install --upgrade pip && python3 -m pip install twine && python3 -m twine upload --non-interactive --verbose --skip-existing wheelhouse/*
      #  on:
      #    branch: master
      #    #branch: test-branch

# Manylinux CI build in progress
#
